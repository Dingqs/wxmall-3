买家								卖家
排队中							排队中							排队中
待处理							待处理							待处理
配送中							已处理							配送中
待确认收货							已完成							已配送
已收货(点确认收货或一定时间后)		已完成							已收货
已取消(待退款)						卖家取消(待退款)					已取消(待退款)
已取消(已退款)						卖家取消(已退款)					已取消(已退款)
退货申请中							退货申请中							退货申请中
退货中							退货中							退货中(待退款)
已退货(待退款)						已退货(待退款)						已退货(待退款)
已退货(已退款)						已退货(已退款)						已退货(已退款)
已取消退货							已取消退货							已取消退货(无需退款)

城市city

卖点区域area(多个area对一个city)

导航栏商品分类catalog(多个catalog对一个area)

商品product(多个product对一个catalog)

用户user(一个用户一个area)

订单order(多个order对应一个user，一个订单对多个product)

购物车cart(一个cart对应一个user，一个cart对应多个product)

优惠券coupon(一个user对应多个coupon)

积分兑换历史pointHistory(展示兑换历史)

登录历史loginHistory(每日登录加积分，加上新用户积分记录一起展示积分记录)

商品评价

*为不能为空
------
User(买家用户)
列名				类型				注释				备注
id				int(11)							自动生成，自增
userName		varchar(30)		用户微信昵称
openid			varchar(40)		微信openid		28位
password		varchar(30)						如果只有从微信认证登录的方式，则不需要密码
avatarUrl		varchar(50)		头像图片地址		微信认证登录后可获取，第一次获取到后也做本地存储
areaId			int(11)			当前选定的区域id	用户登录后，直接根据area_id加载主页内容
areaName		varchar(30)		当前所在区域名		方便显示用，以及后面根据areaName和cityId查询其他表
cityId			int(11)			用户所在城市		因为后面会根据城市确定在哪个表
cityName		varchar(30)		用户所在城市		方便前端加载显示
cartId(已删除)	int(11)			购物车id
point			int(11)			用户当前积分
receiveName		varchar(30)		默认收货人			存这些是方便加载购物车是，不用多一次查询
phoneNumber		varchar(12)		默认收货手机
address			varchar(120)	默认收货地址
addLabel		varchar(20)		默认收货标签
rank			varchar(10)		用户等级			比如'新用户''中级用户''金牌用户'等，暂留的接口

Address(收货地址)
列名				类型				注释				备注
id				int(11)
userId			int(11)			关联的User表里的Id主键
userName		varchar(30)		收货人姓名
phoneNumber		varchat(12)		收货手机
address			varchar(30)		收货地址			由城市名+区域名组成，城市和区域在前端根据用户当前所在位置传入，用户不能修改
detailAddress	varchar(120)	具体地址			具体楼栋号和门牌号，用户自己填
label			varchar(20)		地址标签			如'家''公司'
isDefault		varcar(5)		是否是默认			如果默认地址记录在了User表里，那这里就不要了，但为了方便前端设置时整体传入，这里还是保留
cityId			int
araeId			int

Vendor(区域卖点用户，登录卖家系统)
列名				类型				注释				备注
id				int(11)			
userName		varchar(30)						唯一，同时用来做登录名		
password		varchar(30)		登录卖家系统的密码
avatarUrl		varchar(50)		头像地址			暂时不用
areaId			int(11)			卖家负责的网点
cityId			int(11)			卖家所在城市
cityArea(已删除)		varchar(30)		城市名-区域名		方便直接显示
cityName		varchar(30)		城市名			方便直接显示
areaName		varchra(30)		区域名			方便直接显示
lastIp			varchar(30)		上次登录ip
lastTime		datetime		上次登录时间
isLock			varchar(5)		是否锁定			被超级管理员锁定后不能登录
isDelete		varchar(5)		是否已删除			暂用该字段代替删除，防止物理删除后关联数据出错
ticket 			varchar(120)	二维码ticket		用于https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=TICKET获取绑定的二维码图片
openid			varchar(40)		管理员微信openid

Supervisor(超级管理员)
列名				类型				注释				备注
id				int(11)
userName		varchar(30)						唯一，同时用来做登录名
password		varchar(30)
avatarUrl 		varchar(50)		头像				暂时不用
lastIp			varchar(30)
lastTime		datetime		

City
列名				类型				注释				备注
id				int(11)							自动生成，自增
cityName		varchar(30)*		
avatarUrl		varchar(50)		城市头像			在切换城市页面的城市列表展示
areas			varchar(255)	城市辖区area集合	以'area1id=area1名,area2id=area2名'存储，方便在确定
												城市后直接展示

Area
列名				类型				注释				备注
id				int(11)							
areaName		varchar(30)*
cityId			int(11)*		所属的城市id
cityName		varchar(30)*	所属城市名			便于进入商城后左上角直接展示，不用现查
catalogs		varchar(100)	当前area下的商品类别名称集合，在导航栏显示用，以'名称1=排序值1,名称2=排序值2'存储，方便直接展示，
								因为各area的商品单独放一张product表，表内catalog不会重名，所以不用id,这里的
								名称1、名称2可以直接当成catalog的主键
productTable	varchar(50)		该area对应的商品列表的名字，以areaName+'_'+cityId+'_product'为名称，超级管理员增加
								该area记录时建表。用cityId不用名还是防止重复城市名和区域名的情况出现
closed			varchar(5)		当前是否暂停服务	值为'yes'或'no'，关门的可暂不显示，或设为灰色
longitude		varchar(12)		经度
latitude		varchar(12)		纬度
phoneNumber 	varchar(12)		电话
sender			varchar(30)		默认配送员姓名
senderPhone		varchar(12)		默认配送员电话

Product_cityId_areaId
列名				类型				注释				备注
id				int(11)			
productName		varchar(30)*
catalog			varchar(50)		商品所属的类别		如水果、食材
showWay			varchar(2)		商品展示方式		默认值为's'(小图),值为'b'时为大图展示，空值也小图
price			varchar(10)*	商品价格			实际卖价
standard		varchar(50)		商品规格			如'一份250克'
marketPrice		varchar(10)		对比的超市价格
label			varchar(16)		商品标签			在商品左上角显示的如'新用户专享''绿色食品''小产区'等
coverSUrl		varchar(50)		封面小图地址		小图也用于购物车里展示，所以必须有小图
coverBUrl		varchar(50)		封面大图地址		大图封面也用于商品详细页面顶部展示，所以不管哪种展示，必须有大图
inventory		int(11)			库存量
sequence		int(11)			排序顺序			整形值，越大在商品列表里越靠前
status			varchar(30)		货源状态			值可为空、'库存紧张'、'暂时缺货'
description		varchar(100)	商品简述			详细页面，有的商品在名称下一行有简介,如'顺滑口感，齿颊留香'
origin			varchar(30)		原产地			
salesVolume		int(11)			销量			
likes			int(11)			点赞数
subdetailUrl	varchar(50)		有些详细介绍前还有一个图片
detailUrl		varchar(50)		详细介绍图片地址
isShow			varchar(5)		是否在商品列表显示	值为'yes'(默认)或'no'，与status有区别，是完全不在列表中显示
areaId			int(11)			所属区域
cityId			int(11)			所属城市
threhold		int(11)			库存最低限
prethrehold		int(11)			预设库存
supply			int(11)			补货量，如果为0就是未补货
												
Cart(好像不用设计购物车表，因为没有提交成订单的购物车在用户退出页面重新进来或者切换area后会被清空，不用保存)

Order_cityId_on(将订单表按城市分开，同时根据订单是否确认收货，分为order_cityId_on和order_cityId_off，因为订单的查询条件
比较多，用户根据用户Id查，卖家根据areaId查，卖家要经常查询未完成订单准备出货，所以分开方便查询。另外，之所以不像前面按area分割订单
表，是因为如果用户在跨area下的单要查找其历史订单则需跨表查询，按城市分则跨表几率小很多)
列名				类型				注释				备注
id				int(11)
number			varchar(20)*	订单编号			根据年月日和时分秒以及一个随机生成的4为数组成
productIds		varchar(512)	所有购买的商品id	以'id1,id2,id3'连接
productNames	varchar(512)	所有商品的名称		以'商品名称1=当时单价=数量,商品名称2=当时单价=数量'连接，所有商品名称中不能含有=
orderTime		datetime		下单时间
receiverName	varchar(30)		收货人姓名			
phoneNumber		varchar(12)		收货人手机号
address			varchar(120)	收货地址			只是用户填写的部分，后面有cityarea了
payType			varchar(20)		支付方式			现默认只有'微信安全支付'
receiveType		varchar(20)		收货方式			现默认只有'送货上门'
receiveTime		varchar(30)		收货时间段			如'2016-04-05 9时-12时'
couponId		int(11)			使用的优惠券Id		
couponPrice		varchar(10)		优惠券面值			方便在订单里直接显示而不用再多一次查询
totalPrice		varchar(10)		总价				订单总价
freight			varchar(10)		运费				暂时不用，为以后拓展保留
comment			varchar(255)	用户备注
vcomment		varchar(255)	卖家备注			如'由于**原因，取消该订单'
status			varchar(10)		订单状态			'未确认'(商家未确认)，'买家已取消'(被买家取消)，'卖家已取消'(被卖家取消)'已确认'(商家已确认订单)，'已配送'(以完成送货)
												'已收货'(卖家已收货，没有手动收货的在距离配送一段时间内自动变成已收货)
		
												买家('下单未支付''买家已取消''买家已支付''买家待退货''退货已完成')
												卖家('卖家未确认''卖家已确认''卖家已取消''卖家已完成(完成送货，买家可评价)''卖家确认退货''卖家完成退货')
												'queue'(排队中)
cityarea		varchar(30)		城市+区域名		方便后台直接显示
userId			int(11)			下单人id			对应User表里的Id
areaId			int(11)			区域id			Area表里的Id，区域卖家登录时的查询条件
cityId			int(11)			城市Id			只是为了方便可以从程序里的对象里直接取到该值来确定数据库表
refundStatus	varchar(10)		退款状态			在on表里好像可以不要，暂时留着
history			varchar(255)	订单历史状态		以'订单状态=时间,订单状态2=时间2'的形式存储
point			int(11)			下单赠送的积分
sender			varchar(30)		配送员姓名
senderPhone		varchar(12)		配送员电话

Order_cityId_off(卖家收货或系统一段时间自动收货后，即订单状态变成'已收货'后，或者订单被买家或卖家取消后将其原封不动的从order_cityId_on移到order_cityId_off)
列名				类型				注释				备注
id				int(11)
number			varchar(20)		订单编号			根据年月日和时分秒以及一个随机生成的4为数组成
productIds		varchar(512)	所有购买的商品id	以'id1,id2,id3'连接
productNames	varchar(512)	所有商品的名称		以'商品名称1=当时单价=数量,商品名称2=当时单价=数量'连接，所有商品名称中不能含有=
orderTime		datetime		下单时间
receiverName	varchar(30)		收货人姓名			
phoneNumber		varchar(12)		收货人手机号
address			varchar(120)	收货地址
payType			varchar(20)		支付方式			现默认只有'微信安全支付'
receiveType		varchar(20)		收货方式			现默认只有'送货上门'
receiveTime		varchar(30)		收货时间段			如'2016-04-05 9时-12时'
couponId		int(11)			使用的优惠券Id		
couponPrice		varchar(10)		优惠券面值			方便在订单里直接显示而不用再多一次查询
totalPrice		varchar(10)		总价				订单总价
freight			varchar(10)		运费				暂时不用，为以后拓展保留
comment			varchar(255)	用户备注
vcomment		varchar(255)	卖家备注			如'由于**原因，取消该订单'
finalStatus		varchar(10)		最终状态			'买家已取消'(被买家取消)，'卖家已取消'(被卖家取消)，'已收货'
cityarea		varchar(30)		城市+区域名		方便后台直接显示
finalTime		datatime		最终时间			当前这条记录被添加进来时的时间
userId			int(11)			下单人id			对应User表里的Id
areaId			int(11)			区域id			Area表里的Id，区域卖家登录时的查询条件
cityId			int(11)			城市Id			只是为了方便可以从程序里的对象里直接取到该值来确定数据库
refundStatus	varchar(10)		退款状态
history			varchar(255)	订单历史状态		以'订单状态=时间,订单状态2=时间2'的形式存储
point			int(11)			下单赠送的积分
sender			varchar(30)		配送员姓名
senderPhone		varchar(12)		配送员电话
pcomments		varchar(255)	商品评论的id列表	以"商品id=评论id,"的形式插入

Coupon_cityId(我的积分中心->积分兑换里显示的优惠券类型，是静态优惠券，即没有被兑换的，兑换之后会在下面Coupon_cityId_on中生成)
列名				类型				注释				备注
id				int(11)
name			varchar(30)*	名称				如'10元代金券'
amount			varchar(10)		优惠券面值
coverSUrl		varchar(50)		小图地址			
coverBUrl		varchar(50)		大图地址			
point			int(11)			对应消耗的积分		
restrict		int(11)			使用限制			至少消费到xx元才能使用，在购物车时根据此限制加载可用券，如'消费满10元'
comment			varchar(50)		简单说明			如'新用户欢迎礼券','圣诞节专属礼券'等	
cityName		varchar(30)		所属的城市			便于后台加载所有券时显示
cityId			int(11)			城市Id			虽然是静态的，但城市表名其在哪个城市下看得到
isShow			varchar(5)		是否在前台显示		值为'yes'或'no'，类似上架或下架
type			varchar(20)						值为'代金券兑换'，与Gift中的'礼品兑换'对应

Coupon_cityId_on(未失效的优惠券，按城市划分，原因：1.因为不同城市消费标准不同，2.加快查询的速度)
列名				类型				注释				备注
id				int(11)
name			varchar(30)		名称				如'10元代金券'
amount			varchar(10)		优惠券面值
coverSUrl		varchar(50)		小图地址			
coverBUrl		varchar(50)		大图地址			
point			int(11)			对应消耗的积分		
from			date			起始有效期			领券的日期
to				date			截止有效期
restrict		int(11)			使用限制			至少消费到xx元才能使用，在购物车时根据此限制加载可用券，如'消费满10元'
comment			varchar(50)		简单说明			如'新用户欢迎礼券','圣诞节专属礼券'等	
cityName		varchar(30)		所属的城市			便于后台加载所有券时显示
cityId			int(11)			城市Id
userId			int(11)			优惠券拥有者
type			varchar(20)						值为'代金券兑换'，与Gift中的'礼品兑换'对应

Coupon_cityId_off(已过期或已使用的优惠券，增加一个使用日期，为空表示是过期的)
列名				类型				注释				备注
overdueDate		date			券使用日期			为空表示过期

Gift_cityId(所有礼品类型，因为礼品和优惠券不同，兑换了优惠券没使用会存on表，使用存off表，而兑换了礼品就表示使用了)
列名				类型				注释				备注
id				int(11)			
name			varchar(30)*	名称				如'20元话费充值'
amount(应该不需要)	varchar(10)		面值				优惠券之所以有面值是因为在购物结算时可以按面值抵用，
												而礼品只是用户领取后显示他领取了什么礼物，之后的操作都是由后台管理员根据
												他领的礼品进行操作的，如'帮他充20元话费'
coverSUrl		varchar(50)		小图地址			
coverBUrl		varchar(50)		大图地址
point			int(11)			消耗的积分
comment			varchar(50)		简单介绍
from			date			上线日期
to				date			截止兑换日期		如果后台统一控制上下线的话，可以不要这个日期
inventory		int(11)			礼品总量		
remain			int(11)			剩余数量			如果为0，则可以灰掉，或者自动下线。这块要服务器缓存
type			varchar(20)		类型				值为'礼品兑换'，与Coupon中的'代金券兑换对应'
areaId			int(11)			区域Id			属于哪个区域的gift
areaName		varchar(30)		区域名
cityId			int(11)			城市Id			属于哪个city的gift，主要用于确定Gift_cityId中的cityId来确定表

Gift_cityId_changed(已兑换的礼品，只用显示一些简单信息：礼品名称、消耗积分、兑换日期、当前状态(后台人员是否已处理))
列名				类型				注释				备注
id				int(11)			
name			varchar(30)		名称				如'20元话费充值'
giftId			int(11)			引用Gift_cityId表中的主键，前台展示应该不会用到
coverSUrl		varchar(50)		小图地址			
coverBUrl		varchar(50)		大图地址
point			int(11)			消耗的积分
comment			varchar(50)		简单介绍
changeDate		date			兑换日期
status			varchar(10)		状态				'未完成'(用户已兑换，等待后台人员操作)、'已完成'(后台人员操作完成)
areaId			int(11)			区域Id			属于哪个区域的gift
areaName		varchar(30)		区域名		
cityId			int(11)			城市Id			属于哪个city的gift，主要用于确定Gift_cityId中的cityId来确定表

Point_cityId(静态积分，即记录每种操作分别对应多少的积分)
列名				类型				注释				备注
id				int(11)
source			varchar(30)*	积分来源			比如'新用户关注''每日登陆''下单赠送'，还有'兑换礼品'或'兑换优惠券'消耗，不能重复，可做主键			
point			int(11)			本次来源对应积分	可能为负，即消耗的积分

UserPoint_cityId(实际积分记录，记录每个用户的积分获取和消耗历史)
列名				类型				注释				备注
id				int(11)
source			varchar(30)		积分来源
point			int(11)			获取或消耗的积分	是根据source在Point_cityId中查寻到的对应积分
userId			int(11)			积分获取或消耗者
date			date			获取或使用时间		对于每日登陆的积分，要先检查这个用户这个日期是否有登陆过
												(从下面的LoginLog_date中查)，登陆过了就不再记录

LoginLog_date(记录每日的用户登陆信息，只记录不重复的用户，不记录一个用户同一天的重复登陆，这块可能要多线程)
列名				类型				注释				备注
id				int(11)
userId			int(11)			用户主键


Banner(虽然每个area应该对应一个banner表，但每个area最多就几个分类，一个分类对应一条记录，所以内容会很少，所以考虑不拆分表)
列名				类型				注释				备注
id				int(11)
catalogName		varchar(50)		分类名
productUrl		varchar(50)		产品链接
imgUrl			varchar(50)		banner图片地址
status			vatchar(10)		上线还是下线
cityId			int(11)
areaId			int(11)

Comment_cityId_areaId
列名				类型				注释				备注
id				int(11)
productId		int(11)			被评论的产品id
likes			int(11)			评论被赞次数	
content			varchar(255)	评论内容			
userName		varchar(30)		评论者名			默认值为匿名用户
userImgUrl		varchar(50)		评论者头像地址
userId			int(11)			评论者Id
date			date			评论时间
cityId			int(11)			商品所属城市id
areaId			int(11)			商品所属区域id
orderId			int(11)			对应订单的id

//一下评论不使用，使用上面那个
AreaName_cityId_comment
列名				类型				注释				备注
id				int(11)
userName		varchar(30)*	评论者名字			默认值'匿名用户'
userImgUrl		varchar(50)		评论者头像地址
date			date			评论日期
likes			int(11)			评论被赞次数
content			varchar(255)	评论内容			前端要做字数限制
productId		int(11)			被评论的商品主键	关联areaName_cityId_product的主键，定期可根据主键将表排序，或者
												插入评论时	根据productId的大小按序插入，从而在加载商品评论时查找更快

Exchange_cityId(代金券兑换历史)
列名				类型				注释				备注
id				int(11)
point			int(11)			消耗积分
name			varchar(30)		代金券名称			如'10元代金券'
from			date			起始有效期			领券的日期
to				date			截止有效期
cityId			int(11)			城市Id
userId			int(11)			优惠券拥有者
amount			varchar(10)		优惠券面值
restrict		int(11)			使用限制			至少消费到xx元才能使用，在购物车时根据此限制加载可用券，如'消费满10元'